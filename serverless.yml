org: danwakeemserverless
app: rodger-api
service: rodger-api
configValidationMode: error

provider:
  name: aws
  versionFunctions: false
  runtime: nodejs14.x
  tracing:
    apiGateway: true
    lambda: true
  environment:
    STAGE: ${opt:stage}
    AWS_LAMBDA_EXEC_WRAPPER: /opt/otel-handler
    OPENTELEMETRY_COLLECTOR_CONFIG_FILE: /var/task/collector.yml

plugins:
  - serverless-offline

package:
  individually: true
  patterns:
    - '!coverage/**'
    - '!.serverless/**'
    - '!src/**/*.test.js'
    - '!src/**/*.snap'
    - '!.*'
    - '!.github/*'
    - '!*.sh'
    - '!env.sample'
    - '!assets/**'
    - '!package.json'
    - '!yarn.lock'
    - '!README.md'
    - '!jest.config.js'

# This was build from the nodejs app in the https://github.com/open-telemetry/opentelemetry-lambda repo
layers:
  graphqlMetrics:
    package:
      artifact: layer.zip

functions:
  graphql:
    handler: src/graphql/index.handler
    timeout: 20
    events:
      - http:
          path: graphql
          method: post
          cors: true
    layers:
      - { Ref: GraphqlMetricsLambdaLayer }
      # This was deployed using the collector app in the https://github.com/open-telemetry/opentelemetry-lambda repo
      - arn:aws:lambda:us-east-1:377024778620:layer:otel-collector:10